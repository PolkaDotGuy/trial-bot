[33mcommit 7b0cfdecc836305f67bdaa08e49e105141e1574f[m[33m ([m[1;36mHEAD -> [m[1;32mdevelopment[m[33m)[m
Author: PolkaDotGuy <ryanho1218@gmail.com>
Date:   Mon Jul 25 11:03:56 2022 +0800

    Fixed bot
    
    Added time log for on_guild_join()

[1mdiff --git a/functions.py b/functions.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c68a559[m
[1m--- /dev/null[m
[1m+++ b/functions.py[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mimport pytz[m
[32m+[m[32mfrom datetime import datetime[m
[32m+[m
[32m+[m[32mdef get_current_time(timezone):[m
[32m+[m[32m  timeInTimezone = pytz.timezone(timezone)[m
[32m+[m[32m  datetime_timezone = datetime.now(timeInTimezone)[m
[32m+[m[32m  return datetime_timezone.strftime('%Y:%m:%d %H:%M:%S')[m
\ No newline at end of file[m
[1mdiff --git a/main.py b/main.py[m
[1mindex 7f22f32..26c1836 100644[m
[1m--- a/main.py[m
[1m+++ b/main.py[m
[36m@@ -12,16 +12,18 @@[m [mfrom discord.ext import commands[m
 #hypixel[m
 import requests[m
 [m
[31m-import pytz [m
[32m+[m[32mimport pytz[m
 import timer[m
 from dotenv import load_dotenv[m
 from decouple import config[m
[32m+[m[32mfrom functions import get_current_time[m
 # from keep_alive import keep_alive[m
 # from pathlib import Path[m
[32m+[m[32mimport afk[m
 [m
 [m
 def GetPrefix(client, message):[m
[31m-	'''[m
[32m+[m[32m    '''[m
 	https://stackoverflow.com/a/64513681[m
 	Gets prefixes from prefixes.json.[m
 [m
[36m@@ -34,122 +36,129 @@[m [mdef GetPrefix(client, message):[m
 	:return guild_prefix: prefix of guild in which message was sent[m
 	:type guild_prefix: str[m
 	'''[m
[31m-	with open("prefixes.json", 'r') as f:[m
[31m-		prefixes = json.load(f)[m
[31m-		guild_prefix = prefixes[str(message.guild.id)][m
[31m-	return guild_prefix[m
[31m-[m
[32m+[m[32m    with open("prefixes.json", 'r') as f:[m
[32m+[m[32m        prefixes = json.load(f)[m
[32m+[m[32m        guild_prefix = prefixes[str(message.guild.id)][m
[32m+[m[32m    return guild_prefix[m
 [m
 intents = discord.Intents.default()[m
[31m-intents.message = True[m
[31m-intents.presence = True[m
[31m-client = commands.Bot([m
[31m-	command_prefix=GetPrefix,[m
[31m-	intents = intents,[m
[31m-	strip_after_prefix=True, # Allows for spaces after prefix[m
[31m-	)[m
[32m+[m[32mintents.members = True[m
[32m+[m[32mclient = commands.Bot(command_prefix=GetPrefix,[m
[32m+[m[32m                      intents=intents,[m
[32m+[m[32m                      strip_after_prefix=True)[m
[32m+[m[32m'''Setup cogs'''[m
[32m+[m[32mcogs = [afk][m
[32m+[m[32mfor cog in cogs:[m
[32m+[m[32m    cog.setup(client)[m
 [m
 [m
 # Events[m
 @client.event[m
 async def on_guild_join(guild):[m
[31m-	'''[m
[32m+[m[32m    '''[m
 	https://stackoverflow.com/a/64513681[m
 	Documentation: https://discordpy.readthedocs.io/en/stable/api.html#discord.on_guild_join[m
 	Adds default guild prefix ("t ") to prefixes.json when bot joins server[m
 	'''[m
[31m-	[m
[31m-	with open("prefixes.json", 'r') as f:[m
[31m-		prefixes = json.load(f)[m
 [m
[31m-	prefixes[str(guild.id)] = "t "[m
[32m+[m[32m    current_time = get_current_time("Asia/Hong_Kong") + " HKT"[m
[32m+[m[32m    print(f"Joined {guild.name} at {current_time}!")[m
[32m+[m[32m    with open("prefixes.json", 'r') as f:[m
[32m+[m[32m        prefixes = json.load(f)[m
[32m+[m
[32m+[m[32m    prefixes[str(guild.id)] = "t "[m
[32m+[m
[32m+[m[32m    with open("prefixes.json", 'w') as f:[m
[32m+[m[32m        json.dump(prefixes, f, indent=4)[m
 [m
[31m-	with open("prefixes.json", 'w') as f:[m
[31m-		json.dump(prefixes, f, indent=4)[m
 [m
 @client.event[m
 async def on_guild_remove(guild):[m
[31m-	'''[m
[32m+[m[32m    '''[m
 	https://stackoverflow.com/a/64513681[m
 	Removes guild prefix from prefixes.json when bot leaves server[m
 	'''[m
[31m-	with open("prefixes.json", 'r') as f:[m
[31m-		prefixes = json.load(f)[m
[32m+[m[32m    with open("prefixes.json", 'r') as f:[m
[32m+[m[32m        prefixes = json.load(f)[m
[32m+[m
[32m+[m[32m    prefixes.pop(str(guild.id))[m
 [m
[31m-	prefixes.pop(str(guild.id))[m
[32m+[m[32m    with open("prefixes.json", 'w') as f:[m
[32m+[m[32m        json.dump(prefixes, f, indent=4)[m
 [m
[31m-	with open("prefixes.json", 'w') as f:[m
[31m-		json.dump(prefixes, f, indent=4)[m
 [m
 @client.event[m
 async def on_message(message):[m
[31m-	'''Processes every message'''[m
[31m-	if (message.guild != None):[m
[31m-		'''[m
[32m+[m[32m    '''Processes every message'''[m
[32m+[m[32m    if (message.guild != None):[m
[32m+[m[32m        '''[m
 		channelID = message.channel.id[m
 		serverID = message.guild.id[m
 		'''[m
 [m
[31m-		if (message.author == client.user):[m
[31m-			return[m
[31m-	await client.process_commands(message)[m
[32m+[m[32m        if (message.author == client.user):[m
[32m+[m[32m            return[m
[32m+[m[32m    await client.process_commands(message)[m
[32m+[m
 [m
 @client.event[m
 async def on_ready():[m
[31m-	'''Prints to terminal when bot starts.'''[m
[31m-	print(f'Logged in as {client.user} (ID: {client.user.id})\n------')[m
[31m-	client.loop.create_task(presence())[m
[32m+[m[32m    '''Prints to terminal when bot starts.'''[m
[32m+[m[32m    print(f'Logged in as {client.user} (ID: {client.user.id})\n------')[m
[32m+[m[32m    client.loop.create_task(presence())[m
[32m+[m
 [m
 @client.event[m
 async def presence():[m
[31m-	'''Cycles between presences.'''[m
[31m-	while True:[m
[31m-		await client.change_presence(activity=discord.Game(name="deeznuts"))[m
[31m-		await asyncio.sleep(10)[m
[31m-		await client.change_presence([m
[31m-			activity=discord.Activity([m
[31m-				type=discord.ActivityType.watching,[m
[31m-				name="beluga videos",[m
[31m-			)[m
[31m-		)[m
[31m-		await asyncio.sleep(10)[m
[32m+[m[32m    '''Cycles between presences.'''[m
[32m+[m[32m    while True:[m
[32m+[m[32m        await client.change_presence(activity=discord.Game(name="deeznuts"))[m
[32m+[m[32m        await asyncio.sleep(10)[m
[32m+[m[32m        await client.change_presence(activity=discord.Activity([m
[32m+[m[32m            type=discord.ActivityType.watching,[m
[32m+[m[32m            name="beluga videos",[m
[32m+[m[32m        ))[m
[32m+[m[32m        await asyncio.sleep(10)[m
 [m
 [m
 # Commands[m
 @client.command(name="Ping", aliases=["ping", 'p'])[m
 async def Ping(ctx):[m
[31m-	'''Ping command'''[m
[31m-	await ctx.reply(f"Pong! In {round(client.latency * 1000)}ms")[m
[32m+[m[32m    '''Ping command'''[m
[32m+[m[32m    await ctx.reply(f"Pong! In {round(client.latency * 1000)}ms")[m
[32m+[m
 [m
 @client.command(name="ChangePrefix", aliases=["changeprefix", "prefix"])[m
 @commands.has_permissions(administrator=True)[m
 async def ChangePrefix(ctx, prefix):[m
[31m-	'''[m
[32m+[m[32m    '''[m
 	https://stackoverflow.com/a/64513681[m
 	Changes prefix for a server[m
 [m
 	:param prefix: New server prefix[m
 	:type prefix: str[m
 	'''[m
[31m-	with open("prefixes.json", 'r') as f:[m
[31m-		prefixes = json.load(f)[m
[32m+[m[32m    with open("prefixes.json", 'r') as f:[m
[32m+[m[32m        prefixes = json.load(f)[m
[32m+[m
[32m+[m[32m    prefixes[str(ctx.guild.id)] = prefix[m
 [m
[31m-	prefixes[str(ctx.guild.id)] = prefix[m
[32m+[m[32m    with open("prefixes.json", 'w') as f:[m
[32m+[m[32m        json.dump(prefixes, f, indent=4)[m
 [m
[31m-	with open("prefixes.json", 'w') as f:[m
[31m-		json.dump(prefixes, f, indent=4)[m
[32m+[m[32m    await ctx.send(f"Prefix changed to: `{prefix}`.")[m
[32m+[m[32m    name = f"Prefix: {prefix}"[m
 [m
[31m-	await ctx.send(f"Prefix changed to: `{prefix}`.")[m
[31m-	name = f"Prefix: {prefix}"[m
 [m
 @client.command(aliases=["exit"])[m
 @commands.is_owner()[m
 async def Exit(ctx):[m
[31m-	'''Exit command'''[m
[31m-	await ctx.send("Goodbye...")[m
[31m-	exit()[m
[32m+[m[32m    '''Exit command'''[m
[32m+[m[32m    await ctx.send("Goodbye...")[m
[32m+[m[32m    exit()[m
[32m+[m
 [m
 load_dotenv()[m
 TOKEN = os.getenv('TOKEN')[m
 if (__name__ == "__main__"):[m
[31m-	client.run(TOKEN)[m
\ No newline at end of file[m
[32m+[m[32m    client.run(TOKEN)[m
\ No newline at end of file[m

[33mcommit 5dab03346e6a07583c7d404eaff288bb6f5cc065[m[33m ([m[1;31morigin/development[m[33m)[m
Author: PolkaDotGuy <ryanho1218@gmail.com>
Date:   Mon Jul 25 10:00:39 2022 +0800

    Broken - Hayden pls help
    
    Added afk.py to development, but now broken - maybe because of discord.Intents

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex ef0eb5c..89116f7 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,6 +1,6 @@[m
 *.env[m
 */.config[m
 */venv[m
[31m-*/__pycache__[m
[32m+[m[32m*/__pycache__/[m
 .replit[m
 .nix[m
\ No newline at end of file[m
[1mdiff --git a/__pycache__/a.cpython-39.pyc b/__pycache__/a.cpython-39.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..db5edd3[m
Binary files /dev/null and b/__pycache__/a.cpython-39.pyc differ
[1mdiff --git a/afk.py b/afk.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/main.py b/main.py[m
[1mindex b28b8b5..7f22f32 100644[m
[1m--- a/main.py[m
[1m+++ b/main.py[m
[36m@@ -40,9 +40,12 @@[m [mdef GetPrefix(client, message):[m
 	return guild_prefix[m
 [m
 [m
[32m+[m[32mintents = discord.Intents.default()[m
[32m+[m[32mintents.message = True[m
[32m+[m[32mintents.presence = True[m
 client = commands.Bot([m
 	command_prefix=GetPrefix,[m
[31m-	# intents = discord.Intents(members=True), [m
[32m+[m	[32mintents = intents,[m
 	strip_after_prefix=True, # Allows for spaces after prefix[m
 	)[m
 [m

[33mcommit 2e14ff240b5dd0a4672fef111bd1c575a2f55b0b[m
Author: PolkaDotGuy <ryanho1218@gmail.com>
Date:   Sat Jul 23 23:20:52 2022 +0800

    Added preset prefixes for each server and ChangePrefix command.

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex b77c5b5..ef0eb5c 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,5 +1,6 @@[m
 *.env[m
 */.config[m
 */venv[m
[32m+[m[32m*/__pycache__[m
 .replit[m
 .nix[m
\ No newline at end of file[m
[1mdiff --git a/__pycache__/afk.cpython-39.pyc b/__pycache__/afk.cpython-39.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..bf16bf7[m
Binary files /dev/null and b/__pycache__/afk.cpython-39.pyc differ
[1mdiff --git a/__pycache__/main.cpython-39.pyc b/__pycache__/main.cpython-39.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..2f66e8c[m
Binary files /dev/null and b/__pycache__/main.cpython-39.pyc differ
[1mdiff --git a/main.py b/main.py[m
[1mindex 841d6ab..b28b8b5 100644[m
[1m--- a/main.py[m
[1m+++ b/main.py[m
[36m@@ -19,11 +19,10 @@[m [mfrom decouple import config[m
 # from keep_alive import keep_alive[m
 # from pathlib import Path[m
 [m
[31m-TOKEN = os.getenv('TOKEN')[m
[31m-[m
 [m
 def GetPrefix(client, message):[m
 	'''[m
[32m+[m	[32mhttps://stackoverflow.com/a/64513681[m
 	Gets prefixes from prefixes.json.[m
 [m
 	:param client: bot client[m
[36m@@ -40,16 +39,21 @@[m [mdef GetPrefix(client, message):[m
 		guild_prefix = prefixes[str(message.guild.id)][m
 	return guild_prefix[m
 [m
[32m+[m
 client = commands.Bot([m
[31m-	command_prefix="t ",[m
[31m-	# intents = discord.Intents(members=True)[m
[32m+[m	[32mcommand_prefix=GetPrefix,[m
[32m+[m	[32m# intents = discord.Intents(members=True),[m[41m [m
[32m+[m	[32mstrip_after_prefix=True, # Allows for spaces after prefix[m
 	)[m
 [m
 [m
[32m+[m[32m# Events[m
 @client.event[m
 async def on_guild_join(guild):[m
 	'''[m
[31m-	Documentation: https://discordpy.readthedocs.io/en/stable/api.html#discord.on_member_join[m
[32m+[m	[32mhttps://stackoverflow.com/a/64513681[m
[32m+[m	[32mDocumentation: https://discordpy.readthedocs.io/en/stable/api.html#discord.on_guild_join[m
[32m+[m	[32mAdds default guild prefix ("t ") to prefixes.json when bot joins server[m
 	'''[m
 	[m
 	with open("prefixes.json", 'r') as f:[m
[36m@@ -62,6 +66,10 @@[m [masync def on_guild_join(guild):[m
 [m
 @client.event[m
 async def on_guild_remove(guild):[m
[32m+[m	[32m'''[m
[32m+[m	[32mhttps://stackoverflow.com/a/64513681[m
[32m+[m	[32mRemoves guild prefix from prefixes.json when bot leaves server[m
[32m+[m	[32m'''[m
 	with open("prefixes.json", 'r') as f:[m
 		prefixes = json.load(f)[m
 [m
[36m@@ -70,22 +78,19 @@[m [masync def on_guild_remove(guild):[m
 	with open("prefixes.json", 'w') as f:[m
 		json.dump(prefixes, f, indent=4)[m
 [m
[31m-@client.command()[m
[31m-@commands.has_permissions(administrator=True)[m
[31m-async def ChangePrefix(ctx, prefix):[m
[31m-	with open("prefixes.json", 'r') as f:[m
[31m-		prefixes = json.load(f)[m
[31m-[m
[31m-	prefixes[str(ctx.guild.id)] = prefix[m
[31m-[m
[31m-	with open("prefixes.json", 'w') as f:[m
[31m-		json.dump(prefixes, f, indent=4)[m
[31m-[m
[31m-	await ctx.send(f"Prefix changed to: {prefix}")[m
[31m-	name = f"Prefix: {prefix}"[m
[32m+[m[32m@client.event[m
[32m+[m[32masync def on_message(message):[m
[32m+[m	[32m'''Processes every message'''[m
[32m+[m	[32mif (message.guild != None):[m
[32m+[m		[32m'''[m
[32m+[m		[32mchannelID = message.channel.id[m
[32m+[m		[32mserverID = message.guild.id[m
[32m+[m		[32m'''[m
 [m
[32m+[m		[32mif (message.author == client.user):[m
[32m+[m			[32mreturn[m
[32m+[m	[32mawait client.process_commands(message)[m
 [m
[31m-# Events[m
 @client.event[m
 async def on_ready():[m
 	'''Prints to terminal when bot starts.'''[m
[36m@@ -94,28 +99,18 @@[m [masync def on_ready():[m
 [m
 @client.event[m
 async def presence():[m
[31m-    while True:[m
[31m-        await client.change_presence(activity=discord.Game(name="deeznuts"))[m
[31m-        await asyncio.sleep(10)[m
[31m-        await client.change_presence([m
[31m-            activity=discord.Activity([m
[31m-                type=discord.ActivityType.watching,[m
[31m-                name="beluga videos",[m
[31m-            )[m
[31m-        )[m
[31m-        await asyncio.sleep(10)[m
[32m+[m	[32m'''Cycles between presences.'''[m
[32m+[m	[32mwhile True:[m
[32m+[m		[32mawait client.change_presence(activity=discord.Game(name="deeznuts"))[m
[32m+[m		[32mawait asyncio.sleep(10)[m
[32m+[m		[32mawait client.change_presence([m
[32m+[m			[32mactivity=discord.Activity([m
[32m+[m				[32mtype=discord.ActivityType.watching,[m
[32m+[m				[32mname="beluga videos",[m
[32m+[m			[32m)[m
[32m+[m		[32m)[m
[32m+[m		[32mawait asyncio.sleep(10)[m
 [m
[31m-@client.event[m
[31m-async def on_message(message):[m
[31m-	if message.guild != None:[m
[31m-		'''[m
[31m-		channelID = message.channel.id[m
[31m-		serverID = message.guild.id[m
[31m-		'''[m
[31m-[m
[31m-		if message.author == client.user:[m
[31m-			return[m
[31m-	await client.process_commands(message)[m
 [m
 # Commands[m
 @client.command(name="Ping", aliases=["ping", 'p'])[m
[36m@@ -123,5 +118,35 @@[m [masync def Ping(ctx):[m
 	'''Ping command'''[m
 	await ctx.reply(f"Pong! In {round(client.latency * 1000)}ms")[m
 [m
[31m-if __name__ == "__main__":[m
[32m+[m[32m@client.command(name="ChangePrefix", aliases=["changeprefix", "prefix"])[m
[32m+[m[32m@commands.has_permissions(administrator=True)[m
[32m+[m[32masync def ChangePrefix(ctx, prefix):[m
[32m+[m	[32m'''[m
[32m+[m	[32mhttps://stackoverflow.com/a/64513681[m
[32m+[m	[32mChanges prefix for a server[m
[32m+[m
[32m+[m	[32m:param prefix: New server prefix[m
[32m+[m	[32m:type prefix: str[m
[32m+[m	[32m'''[m
[32m+[m	[32mwith open("prefixes.json", 'r') as f:[m
[32m+[m		[32mprefixes = json.load(f)[m
[32m+[m
[32m+[m	[32mprefixes[str(ctx.guild.id)] = prefix[m
[32m+[m
[32m+[m	[32mwith open("prefixes.json", 'w') as f:[m
[32m+[m		[32mjson.dump(prefixes, f, indent=4)[m
[32m+[m
[32m+[m	[32mawait ctx.send(f"Prefix changed to: `{prefix}`.")[m
[32m+[m	[32mname = f"Prefix: {prefix}"[m
[32m+[m
[32m+[m[32m@client.command(aliases=["exit"])[m
[32m+[m[32m@commands.is_owner()[m
[32m+[m[32masync def Exit(ctx):[m
[32m+[m	[32m'''Exit command'''[m
[32m+[m	[32mawait ctx.send("Goodbye...")[m
[32m+[m	[32mexit()[m
[32m+[m
[32m+[m[32mload_dotenv()[m
[32m+[m[32mTOKEN = os.getenv('TOKEN')[m
[32m+[m[32mif (__name__ == "__main__"):[m
 	client.run(TOKEN)[m
\ No newline at end of file[m
[1mdiff --git a/prefix.json b/prefix.json[m
[1mdeleted file mode 100644[m
[1mindex 4eb7c3f..0000000[m
[1m--- a/prefix.json[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m-{[m
[31m-	[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/prefixes.json b/prefixes.json[m
[1mnew file mode 100644[m
[1mindex 0000000..4458698[m
[1m--- /dev/null[m
[1m+++ b/prefixes.json[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "835051536223830046": "t"[m
[32m+[m[32m}[m
\ No newline at end of file[m

[33mcommit c53899052fa686892e9bdd121bbf139a5be2d68d[m
Author: Ryan Ho <104377775+PolkaDotGuy@users.noreply.github.com>
Date:   Fri Jul 22 15:33:45 2022 +0000

    Added files to be ignored to .gitignore

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex f54d40f..b77c5b5 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,5 +1,5 @@[m
 *.env[m
[31m-*.config[m
[31m-venv[m
[32m+[m[32m*/.config[m
[32m+[m[32m*/venv[m
 .replit[m
 .nix[m
\ No newline at end of file[m

[33mcommit 618333fe763f45fcd5639df8edf7466b17113990[m
Author: Ryan Ho <104377775+PolkaDotGuy@users.noreply.github.com>
Date:   Thu Jul 21 16:07:35 2022 +0000

    First commit for development branch

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..f54d40f[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m*.env[m
[32m+[m[32m*.config[m
[32m+[m[32mvenv[m
[32m+[m[32m.replit[m
[32m+[m[32m.nix[m
\ No newline at end of file[m
[1mdiff --git a/main.py b/main.py[m
[1mindex ea2ae5e..841d6ab 100644[m
[1m--- a/main.py[m
[1m+++ b/main.py[m
[36m@@ -18,11 +18,110 @@[m [mfrom dotenv import load_dotenv[m
 from decouple import config[m
 # from keep_alive import keep_alive[m
 # from pathlib import Path[m
[32m+[m
 TOKEN = os.getenv('TOKEN')[m
 [m
 [m
[31m-def main():[m
[31m-    client.run(my_secret) [m
[32m+[m[32mdef GetPrefix(client, message):[m
[32m+[m	[32m'''[m
[32m+[m	[32mGets prefixes from prefixes.json.[m
[32m+[m
[32m+[m	[32m:param client: bot client[m
[32m+[m	[32m:type client: discord.ext.commands.bot.Bot[m
[32m+[m
[32m+[m	[32m:param message: user message[m
[32m+[m	[32m:type message: str[m
[32m+[m
[32m+[m	[32m:return guild_prefix: prefix of guild in which message was sent[m
[32m+[m	[32m:type guild_prefix: str[m
[32m+[m	[32m'''[m
[32m+[m	[32mwith open("prefixes.json", 'r') as f:[m
[32m+[m		[32mprefixes = json.load(f)[m
[32m+[m		[32mguild_prefix = prefixes[str(message.guild.id)][m
[32m+[m	[32mreturn guild_prefix[m
[32m+[m
[32m+[m[32mclient = commands.Bot([m
[32m+[m	[32mcommand_prefix="t ",[m
[32m+[m	[32m# intents = discord.Intents(members=True)[m
[32m+[m	[32m)[m
[32m+[m
[32m+[m
[32m+[m[32m@client.event[m
[32m+[m[32masync def on_guild_join(guild):[m
[32m+[m	[32m'''[m
[32m+[m	[32mDocumentation: https://discordpy.readthedocs.io/en/stable/api.html#discord.on_member_join[m
[32m+[m	[32m'''[m
[32m+[m[41m	[m
[32m+[m	[32mwith open("prefixes.json", 'r') as f:[m
[32m+[m		[32mprefixes = json.load(f)[m
[32m+[m
[32m+[m	[32mprefixes[str(guild.id)] = "t "[m
[32m+[m
[32m+[m	[32mwith open("prefixes.json", 'w') as f:[m
[32m+[m		[32mjson.dump(prefixes, f, indent=4)[m
[32m+[m
[32m+[m[32m@client.event[m
[32m+[m[32masync def on_guild_remove(guild):[m
[32m+[m	[32mwith open("prefixes.json", 'r') as f:[m
[32m+[m		[32mprefixes = json.load(f)[m
[32m+[m
[32m+[m	[32mprefixes.pop(str(guild.id))[m
[32m+[m
[32m+[m	[32mwith open("prefixes.json", 'w') as f:[m
[32m+[m		[32mjson.dump(prefixes, f, indent=4)[m
[32m+[m
[32m+[m[32m@client.command()[m
[32m+[m[32m@commands.has_permissions(administrator=True)[m
[32m+[m[32masync def ChangePrefix(ctx, prefix):[m
[32m+[m	[32mwith open("prefixes.json", 'r') as f:[m
[32m+[m		[32mprefixes = json.load(f)[m
[32m+[m
[32m+[m	[32mprefixes[str(ctx.guild.id)] = prefix[m
[32m+[m
[32m+[m	[32mwith open("prefixes.json", 'w') as f:[m
[32m+[m		[32mjson.dump(prefixes, f, indent=4)[m
[32m+[m
[32m+[m	[32mawait ctx.send(f"Prefix changed to: {prefix}")[m
[32m+[m	[32mname = f"Prefix: {prefix}"[m
[32m+[m
[32m+[m
[32m+[m[32m# Events[m
[32m+[m[32m@client.event[m
[32m+[m[32masync def on_ready():[m
[32m+[m	[32m'''Prints to terminal when bot starts.'''[m
[32m+[m	[32mprint(f'Logged in as {client.user} (ID: {client.user.id})\n------')[m
[32m+[m	[32mclient.loop.create_task(presence())[m
[32m+[m
[32m+[m[32m@client.event[m
[32m+[m[32masync def presence():[m
[32m+[m[32m    while True:[m
[32m+[m[32m        await client.change_presence(activity=discord.Game(name="deeznuts"))[m
[32m+[m[32m        await asyncio.sleep(10)[m
[32m+[m[32m        await client.change_presence([m
[32m+[m[32m            activity=discord.Activity([m
[32m+[m[32m                type=discord.ActivityType.watching,[m
[32m+[m[32m                name="beluga videos",[m
[32m+[m[32m            )[m
[32m+[m[32m        )[m
[32m+[m[32m        await asyncio.sleep(10)[m
[32m+[m
[32m+[m[32m@client.event[m
[32m+[m[32masync def on_message(message):[m
[32m+[m	[32mif message.guild != None:[m
[32m+[m		[32m'''[m
[32m+[m		[32mchannelID = message.channel.id[m
[32m+[m		[32mserverID = message.guild.id[m
[32m+[m		[32m'''[m
[32m+[m
[32m+[m		[32mif message.author == client.user:[m
[32m+[m			[32mreturn[m
[32m+[m	[32mawait client.process_commands(message)[m
[32m+[m
[32m+[m[32m# Commands[m
[32m+[m[32m@client.command(name="Ping", aliases=["ping", 'p'])[m
[32m+[m[32masync def Ping(ctx):[m
[32m+[m	[32m'''Ping command'''[m
[32m+[m	[32mawait ctx.reply(f"Pong! In {round(client.latency * 1000)}ms")[m
 [m
 if __name__ == "__main__":[m
[31m-    main()[m
[32m+[m	[32mclient.run(TOKEN)[m
\ No newline at end of file[m
[1mdiff --git a/prefix.json b/prefix.json[m
[1mnew file mode 100644[m
[1mindex 0000000..4eb7c3f[m
[1m--- /dev/null[m
[1m+++ b/prefix.json[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m{[m
[32m+[m[41m	[m
[32m+[m[32m}[m
\ No newline at end of file[m

[33mcommit bf0ab79e710d3bb82b3f7660ec04238f7be13eec[m
Author: PolkaDotGuy <>
Date:   Thu Jul 21 15:36:31 2022 +0000

    trash again

[1mdiff --git a/.breakpoints b/.breakpoints[m
[1mnew file mode 100644[m
[1mindex 0000000..5cc232f[m
[1m--- /dev/null[m
[1m+++ b/.breakpoints[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "files": {}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/.replit b/.replit[m
[1mnew file mode 100644[m
[1mindex 0000000..edf0865[m
[1m--- /dev/null[m
[1m+++ b/.replit[m
[36m@@ -0,0 +1,109 @@[m
[32m+[m[32m# The command that runs the program. Commented out because it is not run when the interpreter command is set[m
[32m+[m[32mrun = ["python3", "main.py"][m
[32m+[m[32m# The primary language of the repl. There can be others, though![m
[32m+[m[32mlanguage = "python3"[m
[32m+[m[32m# The main file, which will be shown by default in the editor.[m
[32m+[m[32mentrypoint = "main.py"[m
[32m+[m[32m# A list of globs that specify which files and directories should[m
[32m+[m[32m# be hidden in the workspace.[m
[32m+[m[32mhidden = ["venv", ".config", "**/__pycache__", "**/.mypy_cache", "**/*.pyc"][m
[32m+[m
[32m+[m[32m# Specifies which nix channel to use when building the environment.[m
[32m+[m[32m[nix][m
[32m+[m[32mchannel = "stable-21_11"[m
[32m+[m
[32m+[m[32m# Per-language configuration: python3[m
[32m+[m[32m[languages.python3][m
[32m+[m[32m# Treats all files that end with `.py` as Python.[m
[32m+[m[32mpattern = "**/*.py"[m
[32m+[m[32m# Tells the workspace editor to syntax-highlight these files as[m
[32m+[m[32m# Python.[m
[32m+[m[32msyntax = "python"[m
[32m+[m
[32m+[m[32m  # The command needed to start the Language Server Protocol. For[m
[32m+[m[32m  # linting and formatting.[m
[32m+[m[32m  [languages.python3.languageServer][m
[32m+[m[32m  start = ["pylsp"][m
[32m+[m
[32m+[m[32m# The command to start the interpreter.[m
[32m+[m[32m[interpreter][m
[32m+[m[32m  [interpreter.command][m
[32m+[m[32m  args = [[m
[32m+[m[32m    "stderred",[m
[32m+[m[32m    "--",[m
[32m+[m[32m    "prybar-python3",[m
[32m+[m[32m    "-q",[m
[32m+[m[32m    "--ps1",[m
[32m+[m[32m    "\u0001\u001b[33m\u0002\u0001\u001b[00m\u0002 ",[m
[32m+[m[32m    "-i",[m
[32m+[m[32m  ][m
[32m+[m[32m  env = { LD_LIBRARY_PATH = "$PYTHON_LD_LIBRARY_PATH" }[m
[32m+[m
[32m+[m[32m# The environment variables needed to correctly start Python and use the[m
[32m+[m[32m# package proxy.[m
[32m+[m[32m[env][m
[32m+[m[32mVIRTUAL_ENV = "/home/runner/${REPL_SLUG}/venv"[m
[32m+[m[32mPATH = "${VIRTUAL_ENV}/bin"[m
[32m+[m[32mPYTHONPATH="${VIRTUAL_ENV}/lib/python3.8/site-packages"[m
[32m+[m[32mREPLIT_POETRY_PYPI_REPOSITORY="https://package-proxy.replit.com/pypi/"[m
[32m+[m[32mMPLBACKEND="TkAgg"[m
[32m+[m[32mPOETRY_CACHE_DIR="${HOME}/${REPL_SLUG}/.cache/pypoetry"[m
[32m+[m
[32m+[m[32m# Enable unit tests. This is only supported for a few languages.[m
[32m+[m[32m[unitTest][m
[32m+[m[32mlanguage = "python3"[m
[32m+[m
[32m+[m[32m# Add a debugger![m
[32m+[m[32m[debugger][m
[32m+[m[32msupport = true[m
[32m+[m
[32m+[m[32m  # How to start the debugger.[m
[32m+[m[32m  [debugger.interactive][m
[32m+[m[32m  transport = "localhost:0"[m
[32m+[m[32m  startCommand = ["dap-python", "main.py"][m
[32m+[m
[32m+[m[32m    # How to communicate with the debugger.[m
[32m+[m[32m    [debugger.interactive.integratedAdapter][m
[32m+[m[32m    dapTcpAddress = "localhost:0"[m
[32m+[m
[32m+[m[32m    # How to tell the debugger to start a debugging session.[m
[32m+[m[32m    [debugger.interactive.initializeMessage][m
[32m+[m[32m    command = "initialize"[m
[32m+[m[32m    type = "request"[m
[32m+[m
[32m+[m[32m      [debugger.interactive.initializeMessage.arguments][m
[32m+[m[32m      adapterID = "debugpy"[m
[32m+[m[32m      clientID = "replit"[m
[32m+[m[32m      clientName = "replit.com"[m
[32m+[m[32m      columnsStartAt1 = true[m
[32m+[m[32m      linesStartAt1 = true[m
[32m+[m[32m      locale = "en-us"[m
[32m+[m[32m      pathFormat = "path"[m
[32m+[m[32m      supportsInvalidatedEvent = true[m
[32m+[m[32m      supportsProgressReporting = true[m
[32m+[m[32m      supportsRunInTerminalRequest = true[m
[32m+[m[32m      supportsVariablePaging = true[m
[32m+[m[32m      supportsVariableType = true[m
[32m+[m
[32m+[m[32m    # How to tell the debugger to start the debuggee application.[m
[32m+[m[32m    [debugger.interactive.launchMessage][m
[32m+[m[32m    command = "attach"[m
[32m+[m[32m    type = "request"[m
[32m+[m
[32m+[m[32m      [debugger.interactive.launchMessage.arguments][m
[32m+[m[32m      logging = {}[m
[32m+[m
[32m+[m[32m# Configures the packager.[m
[32m+[m[32m[packager][m
[32m+[m[32m# Search packages in PyPI.[m
[32m+[m[32mlanguage = "python3"[m
[32m+[m[32m# Never attempt to install `unit_tests`. If there are packages that are being[m
[32m+[m[32m# guessed wrongly, add them here.[m
[32m+[m[32mignoredPackages = ["unit_tests"][m
[32m+[m
[32m+[m[32m  [packager.features][m
[32m+[m[32m  enabledForHosting = false[m
[32m+[m[32m  # Enable searching packages from the sidebar.[m
[32m+[m[32m  packageSearch = true[m
[32m+[m[32m  # Enable guessing what packages are needed from the code.[m
[32m+[m[32m  guessImports = true[m
[1mdiff --git a/main.py b/main.py[m
[1mnew file mode 100644[m
[1mindex 0000000..ea2ae5e[m
[1m--- /dev/null[m
[1m+++ b/main.py[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mimport asyncio[m
[32m+[m[32mimport json[m
[32m+[m[32mimport os[m
[32m+[m[32mimport random[m
[32m+[m[32mimport time[m
[32m+[m[32mimport threading[m
[32m+[m[32mfrom datetime import datetime[m
[32m+[m
[32m+[m[32m#from commands import commands[m
[32m+[m[32mimport discord[m
[32m+[m[32mfrom discord.ext import commands[m
[32m+[m[32m#hypixel[m
[32m+[m[32mimport requests[m
[32m+[m
[32m+[m[32mimport pytz[m[41m [m
[32m+[m[32mimport timer[m
[32m+[m[32mfrom dotenv import load_dotenv[m
[32m+[m[32mfrom decouple import config[m
[32m+[m[32m# from keep_alive import keep_alive[m
[32m+[m[32m# from pathlib import Path[m
[32m+[m[32mTOKEN = os.getenv('TOKEN')[m
[32m+[m
[32m+[m
[32m+[m[32mdef main():[m
[32m+[m[32m    client.run(my_secret)[m[41m [m
[32m+[m
[32m+[m[32mif __name__ == "__main__":[m
[32m+[m[32m    main()[m
[1mdiff --git a/replit.nix b/replit.nix[m
[1mnew file mode 100644[m
[1mindex 0000000..bb4b987[m
[1m--- /dev/null[m
[1m+++ b/replit.nix[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m{ pkgs }: {[m
[32m+[m[32m  deps = [[m
[32m+[m[32m    pkgs.python38Full[m
[32m+[m[32m  ];[m
[32m+[m[32m  env = {[m
[32m+[m[32m    PYTHON_LD_LIBRARY_PATH = pkgs.lib.makeLibraryPath [[m
[32m+[m[32m      # Needed for pandas / numpy[m
[32m+[m[32m      pkgs.stdenv.cc.cc.lib[m
[32m+[m[32m      pkgs.zlib[m
[32m+[m[32m      # Needed for pygame[m
[32m+[m[32m      pkgs.glib[m
[32m+[m[32m      # Needed for matplotlib[m
[32m+[m[32m      pkgs.xorg.libX11[m
[32m+[m[32m    ];[m
[32m+[m[32m    PYTHONBIN = "${pkgs.python38Full}/bin/python3.8";[m
[32m+[m[32m    LANG = "en_US.UTF-8";[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/venv/lib/python3.8/site-packages/debugpy/_vendored/pydevd/_pydevd_frame_eval/pydevd_frame_evaluator.cpython-38-x86_64-linux-gnu.so b/venv/lib/python3.8/site-packages/debugpy/_vendored/pydevd/_pydevd_frame_eval/pydevd_frame_evaluator.cpython-38-x86_64-linux-gnu.so[m
[1mnew file mode 120000[m
[1mindex 0000000..0b33b0e[m
[1m--- /dev/null[m
[1m+++ b/venv/lib/python3.8/site-packages/debugpy/_vendored/pydevd/_pydevd_frame_eval/pydevd_frame_evaluator.cpython-38-x86_64-linux-gnu.so[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m/home/runner/.cache/pip/pool/ee/0c/bf/cc7afd9d3b605c29b0b127dfc80ce9ddddd4a3ba3994dcb6e5c15f4d1f[m
\ No newline at end of file[m
[1mdiff --git a/venv/lib/python3.8/site-packages/debugpy/_vendored/pydevd/_pydevd_frame_eval/pydevd_frame_evaluator.pyx b/venv/lib/python3.8/site-packages/debugpy/_vendored/pydevd/_pydevd_frame_eval/pydevd_frame_evaluator.pyx[m
[1mnew file mode 120000[m
[1mindex 0000000..b2dcce5[m
[1m--- /dev/null[m
[1m+++ b/venv/lib/python3.8/site-packages/debugpy/_vendored/pydevd/_pydevd_frame_eval/pydevd_frame_evaluator.pyx[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m/home/runner/.cache/pip/pool/8d/f4/de/653cfe794cd08e9d050e618cda0579946de57d9465f6e43dc2ddab41d2[m
\ No newline at end of file[m
